const { test, expect } = require('@playwright/test');
const { SupportRequestPage } = require('../pages/SupportRequestPage');

test('should submit a request and check response status', async ({ page }) => {
  const supportPage = new SupportRequestPage(page);
  await page.goto('https://awery.aero/support');

  await supportPage.fillProblemDescription('–û–ø–∏—Å –ø—Ä–æ–±–ª–µ–º–∏.');
  await supportPage.fillEmail('test@example.com');
  await supportPage.fillWhenItStarted('–°—å–æ–≥–æ–¥–Ω—ñ');
  await supportPage.fillStepsToRecreate('–ö—Ä–æ–∫ 1, –ö—Ä–æ–∫ 2.');
  await supportPage.fillCompanyName('–¢–µ—Å—Ç–æ–≤–∞ –ö–æ–º–ø–∞–Ω—ñ—è');
  await supportPage.fillFullName('–¢–µ—Å—Ç–æ–≤–∏–π –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á');
  await supportPage.fillPhone('123-456-7890');
  await supportPage.fillBestTimeToFollowUp('–ë—É–¥—å-—è–∫–∏–π —á–∞—Å');
  await supportPage.fillTypeYourBrowser('Chrome');
  await supportPage.fillFlashPlayerVersion('32.0');

  // –û—á—ñ–∫—É—î–º–æ –ø–æ—Ç—Ä—ñ–±–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å –ø—ñ—Å–ª—è –∫–ª—ñ–∫—É
  const [response] = await Promise.all([
    page.waitForResponse(res =>
      res.url().includes('/support') && res.request().method() === 'POST'
    ),
    supportPage.clickSendRequestButton(),
  ]);

  // üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å-–∫–æ–¥—É
  const status = response.status();
  console.log('üì• Response status:', status);

  if (status === 200) {
    await expect(page.getByText('–í–∞—à –∑–∞–ø–∏—Ç —É—Å–ø—ñ—à–Ω–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ.')).toBeVisible();
  } else {
    await page.screenshot({ path: `error-status-${status}.png`, fullPage: true });
    throw new Error(`–ù–µ–ø–µ—Ä–µ–¥–±–∞—á–µ–Ω–∏–π —Å—Ç–∞—Ç—É—Å –∫–æ–¥: ${status}`);
  }
});
